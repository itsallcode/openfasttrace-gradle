name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  matrix-build:

    permissions:
      contents: read

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: "bash"
    strategy:
      matrix:
        java: [17, 21]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-java-${{ matrix.java }}
      cancel-in-progress: true
    name: "Build with Java ${{ matrix.java }}"
    env:
      DEFAULT_JAVA: 17

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: |
          17
          21
        cache: 'gradle'

    - uses: gradle/actions/wrapper-validation@v3

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-java-${{ matrix.java }}-sonar
        restore-keys: ${{ runner.os }}-java-${{ matrix.java }}-sonar

    - name: Build with Java ${{ matrix.java }}
      run: ./gradlew build --warning-mode all -PjavaVersion=${{ matrix.java }}

    - name: Sonar analysis
      if: ${{ env.DEFAULT_JAVA == matrix.java && env.SONAR_TOKEN != null }}
      run: ./gradlew sonar --warning-mode all -Dsonar.token=$SONAR_TOKEN
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    needs: matrix-build
    runs-on: ubuntu-latest
    steps:
      - run: echo "Build successful"
